name: Build and Release

on:
  push:
    tags:
      - 'v*'   # Runs only when you push a tag like v1.0.0

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: get_version
        run: |
          $tag = "${{ github.ref_name }}"
          $version = $tag.TrimStart("v")
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Update project version from tag
        run: |
          (Get-Content ITQuestions/ITQuestions.csproj) `
          -replace '<Version>.*</Version>', "<Version>${{ steps.get_version.outputs.version }}</Version>" `
          -replace '<AssemblyVersion>.*</AssemblyVersion>', "<AssemblyVersion>${{ steps.get_version.outputs.version }}</AssemblyVersion>" `
          -replace '<FileVersion>.*</FileVersion>', "<FileVersion>${{ steps.get_version.outputs.version }}</FileVersion>" `
          | Set-Content ITQuestions/ITQuestions.csproj

      - name: Update update.json
        run: |
          $version = "${{ steps.get_version.outputs.version }}"
          $json = @"
          {
            "latestVersion": "$version",
            "downloadUrl": "https://github.com/${{ github.repository }}/releases/download/v$version/ITQuestions.exe",
            "changelog": "Release v$version"
          }
          "@
          $json | Out-File -FilePath update.json -Encoding utf8

      - name: Commit update.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add update.json ITQuestions/ITQuestions.csproj
          git commit -m "Update version to v${{ steps.get_version.outputs.version }}"
          git push origin HEAD:${{ github.ref_name }} || echo "No push (tag only build)"

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Publish self-contained app
        run: dotnet publish ITQuestions/ITQuestions.csproj -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeAllContentForSelfExtract=true /p:PublishTrimmed=false -o publish

      - name: List publish output
        run: dir publish

      - name: Create zip
        run: powershell Compress-Archive -Path publish/* -DestinationPath ITQuestions-${{ github.ref_name }}.zip

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ITQuestions-${{ github.ref_name }}.zip
            publish/ITQuestions.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
